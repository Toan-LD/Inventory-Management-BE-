// <auto-generated />
using System;
using InventoryManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManagement_BE_.Migrations
{
    [DbContext(typeof(InventoryManagementDbContext))]
    partial class InventoryManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagement.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__CD65CB85E87E201B");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InventoryManagement.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcode");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("ItemId")
                        .HasName("PK__Items__52020FDD0F20E123");

                    b.HasIndex(new[] { "Barcode" }, "UQ__Items__C16E36F8737DC81F")
                        .IsUnique()
                        .HasFilter("[barcode] IS NOT NULL");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("InventoryManagement.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcode");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("LocationType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("location_type");

                    b.Property<int?>("ParentLocationId")
                        .HasColumnType("int")
                        .HasColumnName("parent_location_id");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__771831EA01E2688A");

                    b.HasIndex("ParentLocationId");

                    b.HasIndex(new[] { "Barcode" }, "UQ__Location__C16E36F8E49E22C1")
                        .IsUnique()
                        .HasFilter("[barcode] IS NOT NULL");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("InventoryManagement.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("order_date");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("order_type");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__46596229A372CC71");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("InventoryManagement.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("OrderItemId")
                        .HasName("PK__Order_It__3764B6BCA001D9D9");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_Items", (string)null);
                });

            modelBuilder.Entity("InventoryManagement.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stock_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<int>("BinId")
                        .HasColumnType("int")
                        .HasColumnName("bin_id");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("StockId")
                        .HasName("PK__Stock__E86668627C7CE564");

                    b.HasIndex("BinId");

                    b.HasIndex("ItemId");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("InventoryManagement.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__6EE594E84B0F2C3F");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("InventoryManagement.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("BinId")
                        .HasColumnType("int")
                        .HasColumnName("bin_id");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("transaction_type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__85C600AFDF716A4D");

                    b.HasIndex("BinId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("InventoryManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F7C3BE723");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__F3DBC5725B8A3225")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventoryManagement.Models.WarehouseTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("completed_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("task_type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("TaskId")
                        .HasName("PK__Warehous__0492148D8D26D8C3");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Warehouse_Tasks", (string)null);
                });

            modelBuilder.Entity("InventoryManagement.Models.Location", b =>
                {
                    b.HasOne("InventoryManagement.Models.Location", "ParentLocation")
                        .WithMany("InverseParentLocation")
                        .HasForeignKey("ParentLocationId")
                        .HasConstraintName("FK__Locations__paren__3C69FB99");

                    b.Navigation("ParentLocation");
                });

            modelBuilder.Entity("InventoryManagement.Models.Order", b =>
                {
                    b.HasOne("InventoryManagement.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__customer__49C3F6B7");

                    b.HasOne("InventoryManagement.Models.Supplier", "Supplier")
                        .WithMany("Orders")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__Orders__supplier__4AB81AF0");

                    b.Navigation("Customer");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("InventoryManagement.Models.OrderItem", b =>
                {
                    b.HasOne("InventoryManagement.Models.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Ite__item___4E88ABD4");

                    b.HasOne("InventoryManagement.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Ite__order__4D94879B");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("InventoryManagement.Models.Stock", b =>
                {
                    b.HasOne("InventoryManagement.Models.Location", "Bin")
                        .WithMany("Stocks")
                        .HasForeignKey("BinId")
                        .IsRequired()
                        .HasConstraintName("FK__Stock__bin_id__412EB0B6");

                    b.HasOne("InventoryManagement.Models.Item", "Item")
                        .WithMany("Stocks")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Stock__item_id__403A8C7D");

                    b.Navigation("Bin");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("InventoryManagement.Models.Transaction", b =>
                {
                    b.HasOne("InventoryManagement.Models.Location", "Bin")
                        .WithMany("Transactions")
                        .HasForeignKey("BinId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__bin_i__571DF1D5");

                    b.HasOne("InventoryManagement.Models.Item", "Item")
                        .WithMany("Transactions")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__item___5629CD9C");

                    b.HasOne("InventoryManagement.Models.Order", "Order")
                        .WithMany("Transactions")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Transacti__order__5812160E");

                    b.HasOne("InventoryManagement.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Transacti__user___59063A47");

                    b.Navigation("Bin");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventoryManagement.Models.WarehouseTask", b =>
                {
                    b.HasOne("InventoryManagement.Models.Order", "Order")
                        .WithMany("WarehouseTasks")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Warehouse__order__5DCAEF64");

                    b.HasOne("InventoryManagement.Models.User", "User")
                        .WithMany("WarehouseTasks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Warehouse__user___5EBF139D");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventoryManagement.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("InventoryManagement.Models.Item", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Stocks");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("InventoryManagement.Models.Location", b =>
                {
                    b.Navigation("InverseParentLocation");

                    b.Navigation("Stocks");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("InventoryManagement.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Transactions");

                    b.Navigation("WarehouseTasks");
                });

            modelBuilder.Entity("InventoryManagement.Models.Supplier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("InventoryManagement.Models.User", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("WarehouseTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
